# nginx.conf — DSPM Dashboard (React SPA + Reverse Proxy)
# 컨테이너 내부 포트는 3000으로 청취합니다.
# 호스트는 -p 8200:3000 (또는 원하는포트:3000)으로 매핑하세요.

# ===== (http 레벨) 압축 및 공통 설정 =====
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    font/ttf
    font/otf
    application/vnd.ms-fontobject;

# ===== 백엔드 업스트림 =====
# Collector (컨테이너 내부 포트 8103)
upstream collector_upstream { server sage-collector:8103; keepalive 32; }

upstream policies_upstream  { server sage-compliance-show:8003;  keepalive 32; }
upstream audit_upstream     { server sage-compliance-audit:8103; keepalive 32; }
upstream analyzer_upstream  { server sage-analyzer:8400;         keepalive 32; }
upstream lineage_upstream   { server sage-lineage:8300;          keepalive 32; }

# ===== WebSocket/연결 업그레이드 맵 =====
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 3000 default_server;
    server_name _;

    # ---- 정적 파일(SPA) 루트 ----
    root /usr/share/nginx/html;
    index index.html;

    # ---- 보안 헤더 ----
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # ---- 공통 프록시 기본 헤더/타임아웃 ----
    proxy_http_version 1.1;
    proxy_connect_timeout 10s;
    proxy_send_timeout    300s;
    proxy_read_timeout    300s;
    send_timeout          300s;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;

    # 헬스체크
    location = /health {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # ---------- SPA 라우팅 ----------
    # /dashboard 하위로 서비스될 때 정적자산 404 방지
    location ^~ /dashboard/ {
        rewrite ^/dashboard/(.*)$ /$1 break;
        try_files $uri /index.html;
    }

    # 루트 경로
    location / {
        try_files $uri /index.html;
    }

    # ---- 정적 파일 캐싱 ----
    location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|json)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # === 라우팅 규칙 ===
    # 프론트엔드 호출은 상대경로(/collector, /policies, /audit, /aegis, /lineage, /api) 사용

    # --- Collector: 전체 노출 (/collector/*) - 접두어 제거 ---
    location ^~ /collector/ {
        rewrite ^/collector/?(.*)$ /$1 break;
        proxy_pass http://collector_upstream/;   # 슬래시 有 → 접두어 제거
    }

    # ✅ Swagger 절대경로 보정: /openapi.json → Collector로 전달
    location = /openapi.json {
        proxy_pass http://collector_upstream/openapi.json;
        proxy_http_version 1.1;
    }

    # --- Compliance Show ---
    location ^~ /policies/ {
        rewrite ^/policies/?(.*)$ /$1 break;
        proxy_pass http://policies_upstream/;
    }

    # --- Compliance Audit ---
    location ^~ /audit/ {
        rewrite ^/audit/?(.*)$ /$1 break;
        proxy_pass http://audit_upstream/;
    }

    # --- Analyzer (AEGIS) ---
    location ^~ /aegis/ {
        rewrite ^/aegis/?(.*)$ /$1 break;
        proxy_pass http://analyzer_upstream/;
    }

    # --- Lineage ---
    location ^~ /lineage/ {
        rewrite ^/lineage/?(.*)$ /$1 break;
        proxy_pass http://lineage_upstream/;
    }

    # --- 단일 엔드포인트: /api → Collector ---
    # 1) 혹시 /api/api/* 가 들어오면 /api/* 로 정규화
    location ^~ /api/api/ {
        rewrite ^/api/api/(.*)$ /api/$1 break;
        proxy_pass http://collector_upstream;    # 슬래시 無 → 접두어 보존 (/api/.. 유지)
    }
    # 2) 정상 /api/* 은 접두어 보존해서 전달 (FastAPI의 /api 라우트와 일치)
    location ^~ /api/ {
        proxy_pass http://collector_upstream;    # 슬래시 無 → 접두어 보존 (/api/.. 유지)
    }

    # SPA 에러 페이지도 index.html로 포워딩(필요 시)
    error_page 404 /index.html;

    # 업로드 한도
    client_max_body_size 20m;
}
